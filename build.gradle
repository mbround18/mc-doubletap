plugins {
    id 'java'
    id "com.github.node-gradle.node" version "2.2.4"
    id("maven-publish")

}



publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/mbround18/mc-doubletap")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

task lint(type: YarnTask) {
    args = ['lint']
}

compileJava   {
    doFirst {
        lint
    }
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'CodeMC'
        url  = 'https://repo.codemc.org/repository/maven-public'
    }
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    enabled = true
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.4-R0.1-SNAPSHOT'

    // Libs to be included on publication of jar
    extraLibs group: "org.bstats", name: "bstats-bukkit", version: "1.7"
    extraLibs group: "com.sparkjava", name: "spark-core", version: "2.9.3"
    extraLibs group: "com.sparkjava", name: "spark-template-mustache", version: "2.7.1"
    extraLibs group: "com.graphql-java", name: "graphql-java", version: "16.1"
    extraLibs group: 'com.auth0', name: 'java-jwt', version: '3.12.0'
    extraLibs group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    extraLibs (group: 'net.dv8tion', name: 'JDA', version: '4.2.0_227')  {
        exclude module: 'opus-java'
    }

    configurations.compile.extendsFrom(configurations.extraLibs)
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    // This will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version

    // Replace stuff in mods.toml, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'

        // Replace version
        expand 'version': project.version
    }

    // Copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
}




